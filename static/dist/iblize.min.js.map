{"version":3,"file":"iblize.min.js","sources":["../node_modules/prismjs/prism.js","../src/utils/dom.js","../src/history.js","../src/utils/languages.js","../src/loader.js","../src/iblize.js"],"sourcesContent":["\n/* **********************************************\n     Begin prism-core.js\n********************************************** */\n\n/// <reference lib=\"WebWorker\"/>\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t\t? self // if in worker\n\t\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\nvar Prism = (function (_self) {\n\n\t// Private helper vars\n\tvar lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\n\tvar uniqueId = 0;\n\n\t// The grammar object for plaintext\n\tvar plainTextGrammar = {};\n\n\n\tvar _ = {\n\t\t/**\n\t\t * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\n\t\t * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\n\t\t * additional languages or plugins yourself.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\n\t\t *\n\t\t * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.manual = true;\n\t\t * // add a new <script> to load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tmanual: _self.Prism && _self.Prism.manual,\n\t\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\n\t\t/**\n\t\t * A namespace for utility methods.\n\t\t *\n\t\t * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n\t\t * change or disappear at any time.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t */\n\t\tutil: {\n\t\t\tencode: function encode(tokens) {\n\t\t\t\tif (tokens instanceof Token) {\n\t\t\t\t\treturn new Token(tokens.type, encode(tokens.content), tokens.alias);\n\t\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\t\treturn tokens.map(encode);\n\t\t\t\t} else {\n\t\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the name of the type of the given value.\n\t\t\t *\n\t\t\t * @param {any} o\n\t\t\t * @returns {string}\n\t\t\t * @example\n\t\t\t * type(null)      === 'Null'\n\t\t\t * type(undefined) === 'Undefined'\n\t\t\t * type(123)       === 'Number'\n\t\t\t * type('foo')     === 'String'\n\t\t\t * type(true)      === 'Boolean'\n\t\t\t * type([1, 2])    === 'Array'\n\t\t\t * type({})        === 'Object'\n\t\t\t * type(String)    === 'Function'\n\t\t\t * type(/abc+/)    === 'RegExp'\n\t\t\t */\n\t\t\ttype: function (o) {\n\t\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns a unique number for the given object. Later calls will still return the same number.\n\t\t\t *\n\t\t\t * @param {Object} obj\n\t\t\t * @returns {number}\n\t\t\t */\n\t\t\tobjId: function (obj) {\n\t\t\t\tif (!obj['__id']) {\n\t\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t\t}\n\t\t\t\treturn obj['__id'];\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Creates a deep clone of the given object.\n\t\t\t *\n\t\t\t * The main intended use of this function is to clone language definitions.\n\t\t\t *\n\t\t\t * @param {T} o\n\t\t\t * @param {Record<number, any>} [visited]\n\t\t\t * @returns {T}\n\t\t\t * @template T\n\t\t\t */\n\t\t\tclone: function deepClone(o, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar clone; var id;\n\t\t\t\tswitch (_.util.type(o)) {\n\t\t\t\t\tcase 'Object':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = /** @type {Record<string, any>} */ ({});\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tcase 'Array':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = [];\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\t(/** @type {Array} */(/** @type {any} */(o))).forEach(function (v, i) {\n\t\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn o;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t\t *\n\t\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @returns {string}\n\t\t\t */\n\t\t\tgetLanguage: function (element) {\n\t\t\t\twhile (element && !lang.test(element.className)) {\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\tif (element) {\n\t\t\t\t\treturn (element.className.match(lang) || [, 'none'])[1].toLowerCase();\n\t\t\t\t}\n\t\t\t\treturn 'none';\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the script element that is currently executing.\n\t\t\t *\n\t\t\t * This does __not__ work for line script element.\n\t\t\t *\n\t\t\t * @returns {HTMLScriptElement | null}\n\t\t\t */\n\t\t\tcurrentScript: function () {\n\t\t\t\tif (typeof document === 'undefined') {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif ('currentScript' in document && 1 < 2 /* hack to trip TS' flow analysis */) {\n\t\t\t\t\treturn /** @type {any} */ (document.currentScript);\n\t\t\t\t}\n\n\t\t\t\t// IE11 workaround\n\t\t\t\t// we'll get the src of the current script by parsing IE11's error stack trace\n\t\t\t\t// this will not work for inline scripts\n\n\t\t\t\ttry {\n\t\t\t\t\tthrow new Error();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// Get file src url from stack. Specifically works with the format of stack traces in IE.\n\t\t\t\t\t// A stack will look like this:\n\t\t\t\t\t//\n\t\t\t\t\t// Error\n\t\t\t\t\t//    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n\t\t\t\t\t//    at Global code (http://localhost/components/prism-core.js:606:1)\n\n\t\t\t\t\tvar src = (/at [^(\\r\\n]*\\((.*):[^:]+:[^:]+\\)$/i.exec(err.stack) || [])[1];\n\t\t\t\t\tif (src) {\n\t\t\t\t\t\tvar scripts = document.getElementsByTagName('script');\n\t\t\t\t\t\tfor (var i in scripts) {\n\t\t\t\t\t\t\tif (scripts[i].src == src) {\n\t\t\t\t\t\t\t\treturn scripts[i];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns whether a given class is active for `element`.\n\t\t\t *\n\t\t\t * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n\t\t\t * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n\t\t\t * given class is just the given class with a `no-` prefix.\n\t\t\t *\n\t\t\t * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n\t\t\t * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n\t\t\t * ancestors have the given class or the negated version of it, then the default activation will be returned.\n\t\t\t *\n\t\t\t * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n\t\t\t * version of it, the class is considered active.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} className\n\t\t\t * @param {boolean} [defaultActivation=false]\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tisActive: function (element, className, defaultActivation) {\n\t\t\t\tvar no = 'no-' + className;\n\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar classList = element.classList;\n\t\t\t\t\tif (classList.contains(className)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tif (classList.contains(no)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn !!defaultActivation;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tlanguages: {\n\t\t\t/**\n\t\t\t * The grammar for plain, unformatted text.\n\t\t\t */\n\t\t\tplain: plainTextGrammar,\n\t\t\tplaintext: plainTextGrammar,\n\t\t\ttext: plainTextGrammar,\n\t\t\ttxt: plainTextGrammar,\n\n\t\t\t/**\n\t\t\t * Creates a deep copy of the language with the given id and appends the given tokens.\n\t\t\t *\n\t\t\t * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n\t\t\t * will be overwritten at its original position.\n\t\t\t *\n\t\t\t * ## Best practices\n\t\t\t *\n\t\t\t * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n\t\t\t * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n\t\t\t * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n\t\t\t *\n\t\t\t * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n\t\t\t * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n\t\t\t *\n\t\t\t * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n\t\t\t * @param {Grammar} redef The new tokens to append.\n\t\t\t * @returns {Grammar} The new language created.\n\t\t\t * @public\n\t\t\t * @example\n\t\t\t * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n\t\t\t *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n\t\t\t *     // at its original position\n\t\t\t *     'comment': { ... },\n\t\t\t *     // CSS doesn't have a 'color' token, so this token will be appended\n\t\t\t *     'color': /\\b(?:red|green|blue)\\b/\n\t\t\t * });\n\t\t\t */\n\t\t\textend: function (id, redef) {\n\t\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\t\tfor (var key in redef) {\n\t\t\t\t\tlang[key] = redef[key];\n\t\t\t\t}\n\n\t\t\t\treturn lang;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Inserts tokens _before_ another token in a language definition or any other grammar.\n\t\t\t *\n\t\t\t * ## Usage\n\t\t\t *\n\t\t\t * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n\t\t\t * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n\t\t\t * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n\t\t\t * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n\t\t\t * this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.markup.style = {\n\t\t\t *     // token\n\t\t\t * };\n\t\t\t * ```\n\t\t\t *\n\t\t\t * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n\t\t\t * before existing tokens. For the CSS example above, you would use it like this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'cdata', {\n\t\t\t *     'style': {\n\t\t\t *         // token\n\t\t\t *     }\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Special cases\n\t\t\t *\n\t\t\t * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n\t\t\t * will be ignored.\n\t\t\t *\n\t\t\t * This behavior can be used to insert tokens after `before`:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'comment', {\n\t\t\t *     'comment': Prism.languages.markup.comment,\n\t\t\t *     // tokens after 'comment'\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Limitations\n\t\t\t *\n\t\t\t * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n\t\t\t * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n\t\t\t * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n\t\t\t * deleting properties which is necessary to insert at arbitrary positions.\n\t\t\t *\n\t\t\t * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n\t\t\t * Instead, it will create a new object and replace all references to the target object with the new one. This\n\t\t\t * can be done without temporarily deleting properties, so the iteration order is well-defined.\n\t\t\t *\n\t\t\t * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n\t\t\t * you hold the target object in a variable, then the value of the variable will not change.\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * var oldMarkup = Prism.languages.markup;\n\t\t\t * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n\t\t\t *\n\t\t\t * assert(oldMarkup !== Prism.languages.markup);\n\t\t\t * assert(newMarkup === Prism.languages.markup);\n\t\t\t * ```\n\t\t\t *\n\t\t\t * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n\t\t\t * object to be modified.\n\t\t\t * @param {string} before The key to insert before.\n\t\t\t * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n\t\t\t * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n\t\t\t * object to be modified.\n\t\t\t *\n\t\t\t * Defaults to `Prism.languages`.\n\t\t\t * @returns {Grammar} The new grammar object.\n\t\t\t * @public\n\t\t\t */\n\t\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\t\troot = root || /** @type {any} */ (_.languages);\n\t\t\t\tvar grammar = root[inside];\n\t\t\t\t/** @type {Grammar} */\n\t\t\t\tvar ret = {};\n\n\t\t\t\tfor (var token in grammar) {\n\t\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar old = root[inside];\n\t\t\t\troot[inside] = ret;\n\n\t\t\t\t// Update references in other language definitions\n\t\t\t\t_.languages.DFS(_.languages, function (key, value) {\n\t\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\t\tthis[key] = ret;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn ret;\n\t\t\t},\n\n\t\t\t// Traverse a language definition with Depth First Search\n\t\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar objId = _.util.objId;\n\n\t\t\t\tfor (var i in o) {\n\t\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\t\tvar property = o[i];\n\t\t\t\t\t\tvar propertyType = _.util.type(property);\n\n\t\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t\t} else if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tplugins: {},\n\n\t\t/**\n\t\t * This is the most high-level function in Prism’s API.\n\t\t * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\n\t\t * each one of them.\n\t\t *\n\t\t * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\n\t\t *\n\t\t * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAll: function (async, callback) {\n\t\t\t_.highlightAllUnder(document, async, callback);\n\t\t},\n\n\t\t/**\n\t\t * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\n\t\t * {@link Prism.highlightElement} on each one of them.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-highlightall`\n\t\t * 2. `before-all-elements-highlight`\n\t\t * 3. All hooks of {@link Prism.highlightElement} for each element.\n\t\t *\n\t\t * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\n\t\t * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAllUnder: function (container, async, callback) {\n\t\t\tvar env = {\n\t\t\t\tcallback: callback,\n\t\t\t\tcontainer: container,\n\t\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t\t};\n\n\t\t\t_.hooks.run('before-highlightall', env);\n\n\t\t\tenv.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n\n\t\t\t_.hooks.run('before-all-elements-highlight', env);\n\n\t\t\tfor (var i = 0, element; (element = env.elements[i++]);) {\n\t\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Highlights the code inside a single element.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-sanity-check`\n\t\t * 2. `before-highlight`\n\t\t * 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.\n\t\t * 4. `before-insert`\n\t\t * 5. `after-highlight`\n\t\t * 6. `complete`\n\t\t *\n\t\t * Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for\n\t\t * the element's language.\n\t\t *\n\t\t * @param {Element} element The element containing the code.\n\t\t * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\n\t\t * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\n\t\t * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\n\t\t * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\n\t\t *\n\t\t * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\n\t\t * asynchronous highlighting to work. You can build your own bundle on the\n\t\t * [Download page](https://prismjs.com/download.html).\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\n\t\t * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightElement: function (element, async, callback) {\n\t\t\t// Find language\n\t\t\tvar language = _.util.getLanguage(element);\n\t\t\tvar grammar = _.languages[language];\n\n\t\t\t// Set language on the element, if not present\n\t\t\telement.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\n\t\t\t// Set language on the parent, for styling\n\t\t\tvar parent = element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre') {\n\t\t\t\tparent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\t\t\t}\n\n\t\t\tvar code = element.textContent;\n\n\t\t\tvar env = {\n\t\t\t\telement: element,\n\t\t\t\tlanguage: language,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tcode: code\n\t\t\t};\n\n\t\t\tfunction insertHighlightedCode(highlightedCode) {\n\t\t\t\tenv.highlightedCode = highlightedCode;\n\n\t\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t}\n\n\t\t\t_.hooks.run('before-sanity-check', env);\n\n\t\t\t// plugins may change/add the parent/element\n\t\t\tparent = env.element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre' && !parent.hasAttribute('tabindex')) {\n\t\t\t\tparent.setAttribute('tabindex', '0');\n\t\t\t}\n\n\t\t\tif (!env.code) {\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_.hooks.run('before-highlight', env);\n\n\t\t\tif (!env.grammar) {\n\t\t\t\tinsertHighlightedCode(_.util.encode(env.code));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (async && _self.Worker) {\n\t\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\t\tworker.onmessage = function (evt) {\n\t\t\t\t\tinsertHighlightedCode(evt.data);\n\t\t\t\t};\n\n\t\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\t\tlanguage: env.language,\n\t\t\t\t\tcode: env.code,\n\t\t\t\t\timmediateClose: true\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns a string with the HTML produced.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-tokenize`\n\t\t * 2. `after-tokenize`\n\t\t * 3. `wrap`: On each {@link Token}.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @param {string} language The name of the language definition passed to `grammar`.\n\t\t * @returns {string} The highlighted HTML.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n\t\t */\n\t\thighlight: function (text, grammar, language) {\n\t\t\tvar env = {\n\t\t\t\tcode: text,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tlanguage: language\n\t\t\t};\n\t\t\t_.hooks.run('before-tokenize', env);\n\t\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t\t_.hooks.run('after-tokenize', env);\n\t\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t\t},\n\n\t\t/**\n\t\t * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns an array with the tokenized code.\n\t\t *\n\t\t * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n\t\t *\n\t\t * This method could be useful in other contexts as well, as a very crude parser.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @returns {TokenStream} An array of strings and tokens, a token stream.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * let code = `var foo = 0;`;\n\t\t * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n\t\t * tokens.forEach(token => {\n\t\t *     if (token instanceof Prism.Token && token.type === 'number') {\n\t\t *         console.log(`Found numeric literal: ${token.content}`);\n\t\t *     }\n\t\t * });\n\t\t */\n\t\ttokenize: function (text, grammar) {\n\t\t\tvar rest = grammar.rest;\n\t\t\tif (rest) {\n\t\t\t\tfor (var token in rest) {\n\t\t\t\t\tgrammar[token] = rest[token];\n\t\t\t\t}\n\n\t\t\t\tdelete grammar.rest;\n\t\t\t}\n\n\t\t\tvar tokenList = new LinkedList();\n\t\t\taddAfter(tokenList, tokenList.head, text);\n\n\t\t\tmatchGrammar(text, tokenList, grammar, tokenList.head, 0);\n\n\t\t\treturn toArray(tokenList);\n\t\t},\n\n\t\t/**\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thooks: {\n\t\t\tall: {},\n\n\t\t\t/**\n\t\t\t * Adds the given callback to the list of callbacks for the given hook.\n\t\t\t *\n\t\t\t * The callback will be invoked when the hook it is registered for is run.\n\t\t\t * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n\t\t\t *\n\t\t\t * One callback function can be registered to multiple hooks and the same hook multiple times.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {HookCallback} callback The callback function which is given environment variables.\n\t\t\t * @public\n\t\t\t */\n\t\t\tadd: function (name, callback) {\n\t\t\t\tvar hooks = _.hooks.all;\n\n\t\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\t\thooks[name].push(callback);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Runs a hook invoking all registered callbacks with the given environment variables.\n\t\t\t *\n\t\t\t * Callbacks will be invoked synchronously and in the order in which they were registered.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n\t\t\t * @public\n\t\t\t */\n\t\t\trun: function (name, env) {\n\t\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0, callback; (callback = callbacks[i++]);) {\n\t\t\t\t\tcallback(env);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tToken: Token\n\t};\n\t_self.Prism = _;\n\n\n\t// Typescript note:\n\t// The following can be used to import the Token type in JSDoc:\n\t//\n\t//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n\t/**\n\t * Creates a new token.\n\t *\n\t * @param {string} type See {@link Token#type type}\n\t * @param {string | TokenStream} content See {@link Token#content content}\n\t * @param {string|string[]} [alias] The alias(es) of the token.\n\t * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n\t * @class\n\t * @global\n\t * @public\n\t */\n\tfunction Token(type, content, alias, matchedStr) {\n\t\t/**\n\t\t * The type of the token.\n\t\t *\n\t\t * This is usually the key of a pattern in a {@link Grammar}.\n\t\t *\n\t\t * @type {string}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.type = type;\n\t\t/**\n\t\t * The strings or tokens contained by this token.\n\t\t *\n\t\t * This will be a token stream if the pattern matched also defined an `inside` grammar.\n\t\t *\n\t\t * @type {string | TokenStream}\n\t\t * @public\n\t\t */\n\t\tthis.content = content;\n\t\t/**\n\t\t * The alias(es) of the token.\n\t\t *\n\t\t * @type {string|string[]}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.alias = alias;\n\t\t// Copy of the full string this token was created from\n\t\tthis.length = (matchedStr || '').length | 0;\n\t}\n\n\t/**\n\t * A token stream is an array of strings and {@link Token Token} objects.\n\t *\n\t * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n\t * them.\n\t *\n\t * 1. No adjacent strings.\n\t * 2. No empty strings.\n\t *\n\t *    The only exception here is the token stream that only contains the empty string and nothing else.\n\t *\n\t * @typedef {Array<string | Token>} TokenStream\n\t * @global\n\t * @public\n\t */\n\n\t/**\n\t * Converts the given token or token stream to an HTML representation.\n\t *\n\t * The following hooks will be run:\n\t * 1. `wrap`: On each {@link Token}.\n\t *\n\t * @param {string | Token | TokenStream} o The token or token stream to be converted.\n\t * @param {string} language The name of current language.\n\t * @returns {string} The HTML representation of the token or token stream.\n\t * @memberof Token\n\t * @static\n\t */\n\tToken.stringify = function stringify(o, language) {\n\t\tif (typeof o == 'string') {\n\t\t\treturn o;\n\t\t}\n\t\tif (Array.isArray(o)) {\n\t\t\tvar s = '';\n\t\t\to.forEach(function (e) {\n\t\t\t\ts += stringify(e, language);\n\t\t\t});\n\t\t\treturn s;\n\t\t}\n\n\t\tvar env = {\n\t\t\ttype: o.type,\n\t\t\tcontent: stringify(o.content, language),\n\t\t\ttag: 'span',\n\t\t\tclasses: ['token', o.type],\n\t\t\tattributes: {},\n\t\t\tlanguage: language\n\t\t};\n\n\t\tvar aliases = o.alias;\n\t\tif (aliases) {\n\t\t\tif (Array.isArray(aliases)) {\n\t\t\t\tArray.prototype.push.apply(env.classes, aliases);\n\t\t\t} else {\n\t\t\t\tenv.classes.push(aliases);\n\t\t\t}\n\t\t}\n\n\t\t_.hooks.run('wrap', env);\n\n\t\tvar attributes = '';\n\t\tfor (var name in env.attributes) {\n\t\t\tattributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t\t}\n\n\t\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n\t};\n\n\t/**\n\t * @param {RegExp} pattern\n\t * @param {number} pos\n\t * @param {string} text\n\t * @param {boolean} lookbehind\n\t * @returns {RegExpExecArray | null}\n\t */\n\tfunction matchPattern(pattern, pos, text, lookbehind) {\n\t\tpattern.lastIndex = pos;\n\t\tvar match = pattern.exec(text);\n\t\tif (match && lookbehind && match[1]) {\n\t\t\t// change the match to remove the text matched by the Prism lookbehind group\n\t\t\tvar lookbehindLength = match[1].length;\n\t\t\tmatch.index += lookbehindLength;\n\t\t\tmatch[0] = match[0].slice(lookbehindLength);\n\t\t}\n\t\treturn match;\n\t}\n\n\t/**\n\t * @param {string} text\n\t * @param {LinkedList<string | Token>} tokenList\n\t * @param {any} grammar\n\t * @param {LinkedListNode<string | Token>} startNode\n\t * @param {number} startPos\n\t * @param {RematchOptions} [rematch]\n\t * @returns {void}\n\t * @private\n\t *\n\t * @typedef RematchOptions\n\t * @property {string} cause\n\t * @property {number} reach\n\t */\n\tfunction matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n\t\tfor (var token in grammar) {\n\t\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tif (rematch && rematch.cause == token + ',' + j) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar patternObj = patterns[j];\n\t\t\t\tvar inside = patternObj.inside;\n\t\t\t\tvar lookbehind = !!patternObj.lookbehind;\n\t\t\t\tvar greedy = !!patternObj.greedy;\n\t\t\t\tvar alias = patternObj.alias;\n\n\t\t\t\tif (greedy && !patternObj.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n\t\t\t\t\tpatternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n\t\t\t\t}\n\n\t\t\t\t/** @type {RegExp} */\n\t\t\t\tvar pattern = patternObj.pattern || patternObj;\n\n\t\t\t\tfor ( // iterate the token list and keep track of the current token/string position\n\t\t\t\t\tvar currentNode = startNode.next, pos = startPos;\n\t\t\t\t\tcurrentNode !== tokenList.tail;\n\t\t\t\t\tpos += currentNode.value.length, currentNode = currentNode.next\n\t\t\t\t) {\n\n\t\t\t\t\tif (rematch && pos >= rematch.reach) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar str = currentNode.value;\n\n\t\t\t\t\tif (tokenList.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeCount = 1; // this is the to parameter of removeBetween\n\t\t\t\t\tvar match;\n\n\t\t\t\t\tif (greedy) {\n\t\t\t\t\t\tmatch = matchPattern(pattern, pos, text, lookbehind);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index;\n\t\t\t\t\t\tvar to = match.index + match[0].length;\n\t\t\t\t\t\tvar p = pos;\n\n\t\t\t\t\t\t// find the node that contains the match\n\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\twhile (from >= p) {\n\t\t\t\t\t\t\tcurrentNode = currentNode.next;\n\t\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// adjust pos (and p)\n\t\t\t\t\t\tp -= currentNode.value.length;\n\t\t\t\t\t\tpos = p;\n\n\t\t\t\t\t\t// the current node is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\tif (currentNode.value instanceof Token) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// find the last node which is affected by this match\n\t\t\t\t\t\tfor (\n\t\t\t\t\t\t\tvar k = currentNode;\n\t\t\t\t\t\t\tk !== tokenList.tail && (p < to || typeof k.value === 'string');\n\t\t\t\t\t\t\tk = k.next\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tremoveCount++;\n\t\t\t\t\t\t\tp += k.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tremoveCount--;\n\n\t\t\t\t\t\t// replace with the new match\n\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmatch = matchPattern(pattern, 0, str, lookbehind);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// eslint-disable-next-line no-redeclare\n\t\t\t\t\tvar from = match.index;\n\t\t\t\t\tvar matchStr = match[0];\n\t\t\t\t\tvar before = str.slice(0, from);\n\t\t\t\t\tvar after = str.slice(from + matchStr.length);\n\n\t\t\t\t\tvar reach = pos + str.length;\n\t\t\t\t\tif (rematch && reach > rematch.reach) {\n\t\t\t\t\t\trematch.reach = reach;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeFrom = currentNode.prev;\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\tremoveFrom = addAfter(tokenList, removeFrom, before);\n\t\t\t\t\t\tpos += before.length;\n\t\t\t\t\t}\n\n\t\t\t\t\tremoveRange(tokenList, removeFrom, removeCount);\n\n\t\t\t\t\tvar wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n\t\t\t\t\tcurrentNode = addAfter(tokenList, removeFrom, wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\taddAfter(tokenList, currentNode, after);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (removeCount > 1) {\n\t\t\t\t\t\t// at least one Token object was removed, so we have to do some rematching\n\t\t\t\t\t\t// this can only happen if the current pattern is greedy\n\n\t\t\t\t\t\t/** @type {RematchOptions} */\n\t\t\t\t\t\tvar nestedRematch = {\n\t\t\t\t\t\t\tcause: token + ',' + j,\n\t\t\t\t\t\t\treach: reach\n\t\t\t\t\t\t};\n\t\t\t\t\t\tmatchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch);\n\n\t\t\t\t\t\t// the reach might have been extended because of the rematching\n\t\t\t\t\t\tif (rematch && nestedRematch.reach > rematch.reach) {\n\t\t\t\t\t\t\trematch.reach = nestedRematch.reach;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @typedef LinkedListNode\n\t * @property {T} value\n\t * @property {LinkedListNode<T> | null} prev The previous node.\n\t * @property {LinkedListNode<T> | null} next The next node.\n\t * @template T\n\t * @private\n\t */\n\n\t/**\n\t * @template T\n\t * @private\n\t */\n\tfunction LinkedList() {\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar head = { value: null, prev: null, next: null };\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar tail = { value: null, prev: head, next: null };\n\t\thead.next = tail;\n\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.head = head;\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.tail = tail;\n\t\tthis.length = 0;\n\t}\n\n\t/**\n\t * Adds a new node with the given value to the list.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {T} value\n\t * @returns {LinkedListNode<T>} The added node.\n\t * @template T\n\t */\n\tfunction addAfter(list, node, value) {\n\t\t// assumes that node != list.tail && values.length >= 0\n\t\tvar next = node.next;\n\n\t\tvar newNode = { value: value, prev: node, next: next };\n\t\tnode.next = newNode;\n\t\tnext.prev = newNode;\n\t\tlist.length++;\n\n\t\treturn newNode;\n\t}\n\t/**\n\t * Removes `count` nodes after the given node. The given node will not be removed.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {number} count\n\t * @template T\n\t */\n\tfunction removeRange(list, node, count) {\n\t\tvar next = node.next;\n\t\tfor (var i = 0; i < count && next !== list.tail; i++) {\n\t\t\tnext = next.next;\n\t\t}\n\t\tnode.next = next;\n\t\tnext.prev = node;\n\t\tlist.length -= i;\n\t}\n\t/**\n\t * @param {LinkedList<T>} list\n\t * @returns {T[]}\n\t * @template T\n\t */\n\tfunction toArray(list) {\n\t\tvar array = [];\n\t\tvar node = list.head.next;\n\t\twhile (node !== list.tail) {\n\t\t\tarray.push(node.value);\n\t\t\tnode = node.next;\n\t\t}\n\t\treturn array;\n\t}\n\n\n\tif (!_self.document) {\n\t\tif (!_self.addEventListener) {\n\t\t\t// in Node.js\n\t\t\treturn _;\n\t\t}\n\n\t\tif (!_.disableWorkerMessageHandler) {\n\t\t\t// In worker\n\t\t\t_self.addEventListener('message', function (evt) {\n\t\t\t\tvar message = JSON.parse(evt.data);\n\t\t\t\tvar lang = message.language;\n\t\t\t\tvar code = message.code;\n\t\t\t\tvar immediateClose = message.immediateClose;\n\n\t\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\t\tif (immediateClose) {\n\t\t\t\t\t_self.close();\n\t\t\t\t}\n\t\t\t}, false);\n\t\t}\n\n\t\treturn _;\n\t}\n\n\t// Get current script and highlight\n\tvar script = _.util.currentScript();\n\n\tif (script) {\n\t\t_.filename = script.src;\n\n\t\tif (script.hasAttribute('data-manual')) {\n\t\t\t_.manual = true;\n\t\t}\n\t}\n\n\tfunction highlightAutomaticallyCallback() {\n\t\tif (!_.manual) {\n\t\t\t_.highlightAll();\n\t\t}\n\t}\n\n\tif (!_.manual) {\n\t\t// If the document state is \"loading\", then we'll use DOMContentLoaded.\n\t\t// If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n\t\t// DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n\t\t// might take longer one animation frame to execute which can create a race condition where only some plugins have\n\t\t// been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n\t\t// See https://github.com/PrismJS/prism/issues/2102\n\t\tvar readyState = document.readyState;\n\t\tif (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n\t\t\tdocument.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n\t\t} else {\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(highlightAutomaticallyCallback);\n\t\t\t} else {\n\t\t\t\twindow.setTimeout(highlightAutomaticallyCallback, 16);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn _;\n\n}(_self));\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n// some additional documentation/types\n\n/**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n */\n\n/**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */\n\n/**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n */\n\n/**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */\n\n\n/* **********************************************\n     Begin prism-markup.js\n********************************************** */\n\nPrism.languages.markup = {\n\t'comment': {\n\t\tpattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n\t\tgreedy: true\n\t},\n\t'prolog': {\n\t\tpattern: /<\\?[\\s\\S]+?\\?>/,\n\t\tgreedy: true\n\t},\n\t'doctype': {\n\t\t// https://www.w3.org/TR/xml/#NT-doctypedecl\n\t\tpattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'internal-subset': {\n\t\t\t\tpattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: null // see below\n\t\t\t},\n\t\t\t'string': {\n\t\t\t\tpattern: /\"[^\"]*\"|'[^']*'/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t'punctuation': /^<!|>$|[[\\]]/,\n\t\t\t'doctype-tag': /^DOCTYPE/i,\n\t\t\t'name': /[^\\s<>'\"]+/\n\t\t}\n\t},\n\t'cdata': {\n\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\tgreedy: true\n\t},\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'special-attr': [],\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t/\"|'/\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': [\n\t\t{\n\t\t\tpattern: /&[\\da-z]{1,8};/i,\n\t\t\talias: 'named-entity'\n\t\t},\n\t\t/&#x?[\\da-f]{1,8};/i\n\t]\n};\n\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n\tPrism.languages.markup['entity'];\nPrism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup;\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function (env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n\t/**\n\t * Adds an inlined language to markup.\n\t *\n\t * An example of an inlined language is CSS with `<style>` tags.\n\t *\n\t * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addInlined('style', 'css');\n\t */\n\tvalue: function addInlined(tagName, lang) {\n\t\tvar includedCdataInside = {};\n\t\tincludedCdataInside['language-' + lang] = {\n\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n\n\t\tvar inside = {\n\t\t\t'included-cdata': {\n\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\t\t\tinside: includedCdataInside\n\t\t\t}\n\t\t};\n\t\tinside['language-' + lang] = {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\n\t\tvar def = {};\n\t\tdef[tagName] = {\n\t\t\tpattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () { return tagName; }), 'i'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: inside\n\t\t};\n\n\t\tPrism.languages.insertBefore('markup', 'cdata', def);\n\t}\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addAttribute', {\n\t/**\n\t * Adds an pattern to highlight languages embedded in HTML attributes.\n\t *\n\t * An example of an inlined language is CSS with `style` attributes.\n\t *\n\t * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addAttribute('style', 'css');\n\t */\n\tvalue: function (attrName, lang) {\n\t\tPrism.languages.markup.tag.inside['special-attr'].push({\n\t\t\tpattern: RegExp(\n\t\t\t\t/(^|[\"'\\s])/.source + '(?:' + attrName + ')' + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source,\n\t\t\t\t'i'\n\t\t\t),\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'attr-name': /^[^\\s=]+/,\n\t\t\t\t'attr-value': {\n\t\t\t\t\tpattern: /=[\\s\\S]+/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'value': {\n\t\t\t\t\t\t\tpattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\talias: [lang, 'language-' + lang],\n\t\t\t\t\t\t\tinside: Prism.languages[lang]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/\"|'/\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n});\n\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.ssml = Prism.languages.xml;\nPrism.languages.atom = Prism.languages.xml;\nPrism.languages.rss = Prism.languages.xml;\n\n\n/* **********************************************\n     Begin prism-css.js\n********************************************** */\n\n(function (Prism) {\n\n\tvar string = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\n\n\tPrism.languages.css = {\n\t\t'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n\t\t'atrule': {\n\t\t\tpattern: /@[\\w-](?:[^;{\\s]|\\s+(?![\\s{]))*(?:;|(?=\\s*\\{))/,\n\t\t\tinside: {\n\t\t\t\t'rule': /^@[\\w-]+/,\n\t\t\t\t'selector-function-argument': {\n\t\t\t\t\tpattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'selector'\n\t\t\t\t},\n\t\t\t\t'keyword': {\n\t\t\t\t\tpattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t'url': {\n\t\t\t// https://drafts.csswg.org/css-values-3/#urls\n\t\t\tpattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'function': /^url/i,\n\t\t\t\t'punctuation': /^\\(|\\)$/,\n\t\t\t\t'string': {\n\t\t\t\t\tpattern: RegExp('^' + string.source + '$'),\n\t\t\t\t\talias: 'url'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'selector': {\n\t\t\tpattern: RegExp('(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n\t\t\tlookbehind: true\n\t\t},\n\t\t'string': {\n\t\t\tpattern: string,\n\t\t\tgreedy: true\n\t\t},\n\t\t'property': {\n\t\t\tpattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'important': /!important\\b/i,\n\t\t'function': {\n\t\t\tpattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'punctuation': /[(){};:,]/\n\t};\n\n\tPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\n\tvar markup = Prism.languages.markup;\n\tif (markup) {\n\t\tmarkup.tag.addInlined('style', 'css');\n\t\tmarkup.tag.addAttribute('style', 'css');\n\t}\n\n}(Prism));\n\n\n/* **********************************************\n     Begin prism-clike.js\n********************************************** */\n\nPrism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'punctuation': /[.\\\\]/\n\t\t}\n\t},\n\t'keyword': /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n\t'boolean': /\\b(?:true|false)\\b/,\n\t'function': /\\b\\w+(?=\\()/,\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\t'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\n\n/* **********************************************\n     Begin prism-javascript.js\n********************************************** */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n\t'class-name': [\n\t\tPrism.languages.clike['class-name'],\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:prototype|constructor))/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /((?:^|\\})\\s*)catch\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t],\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\t'number': /\\b(?:(?:0[xX](?:[\\dA-Fa-f](?:_[\\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\\d(?:_\\d)?)+n|NaN|Infinity)\\b|(?:\\b(?:\\d(?:_\\d)?)+\\.?(?:\\d(?:_\\d)?)*|\\B\\.(?:\\d(?:_\\d)?)+)(?:[Ee][+-]?(?:\\d(?:_\\d)?)+)?/,\n\t'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\n\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+/;\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\t// eslint-disable-next-line regexp/no-dupe-characters-character-class\n\t\tpattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'regex-source': {\n\t\t\t\tpattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'language-regex',\n\t\t\t\tinside: Prism.languages.regex\n\t\t\t},\n\t\t\t'regex-delimiter': /^\\/|\\/$/,\n\t\t\t'regex-flags': /^[a-z]+$/,\n\t\t}\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n\t\talias: 'function'\n\t},\n\t'parameter': [\n\t\t{\n\t\t\tpattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t}\n\t],\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'hashbang': {\n\t\tpattern: /^#!.*/,\n\t\tgreedy: true,\n\t\talias: 'comment'\n\t},\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'template-punctuation': {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t}\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\n\n\t// add attribute support for all DOM events.\n\t// https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n\tPrism.languages.markup.tag.addAttribute(\n\t\t/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,\n\t\t'javascript'\n\t);\n}\n\nPrism.languages.js = Prism.languages.javascript;\n\n\n/* **********************************************\n     Begin prism-file-highlight.js\n********************************************** */\n\n(function () {\n\n\tif (typeof Prism === 'undefined' || typeof document === 'undefined') {\n\t\treturn;\n\t}\n\n\t// https://developer.mozilla.org/en-US/docs/Web/API/Element/matches#Polyfill\n\tif (!Element.prototype.matches) {\n\t\tElement.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n\t}\n\n\tvar LOADING_MESSAGE = 'Loading…';\n\tvar FAILURE_MESSAGE = function (status, message) {\n\t\treturn '✖ Error ' + status + ' while fetching file: ' + message;\n\t};\n\tvar FAILURE_EMPTY_MESSAGE = '✖ Error: File does not exist or is empty';\n\n\tvar EXTENSIONS = {\n\t\t'js': 'javascript',\n\t\t'py': 'python',\n\t\t'rb': 'ruby',\n\t\t'ps1': 'powershell',\n\t\t'psm1': 'powershell',\n\t\t'sh': 'bash',\n\t\t'bat': 'batch',\n\t\t'h': 'c',\n\t\t'tex': 'latex'\n\t};\n\n\tvar STATUS_ATTR = 'data-src-status';\n\tvar STATUS_LOADING = 'loading';\n\tvar STATUS_LOADED = 'loaded';\n\tvar STATUS_FAILED = 'failed';\n\n\tvar SELECTOR = 'pre[data-src]:not([' + STATUS_ATTR + '=\"' + STATUS_LOADED + '\"])'\n\t\t+ ':not([' + STATUS_ATTR + '=\"' + STATUS_LOADING + '\"])';\n\n\tvar lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\n\n\t/**\n\t * Sets the Prism `language-xxxx` or `lang-xxxx` class to the given language.\n\t *\n\t * @param {HTMLElement} element\n\t * @param {string} language\n\t * @returns {void}\n\t */\n\tfunction setLanguageClass(element, language) {\n\t\tvar className = element.className;\n\t\tclassName = className.replace(lang, ' ') + ' language-' + language;\n\t\telement.className = className.replace(/\\s+/g, ' ').trim();\n\t}\n\n\n\tPrism.hooks.add('before-highlightall', function (env) {\n\t\tenv.selector += ', ' + SELECTOR;\n\t});\n\n\tPrism.hooks.add('before-sanity-check', function (env) {\n\t\tvar pre = /** @type {HTMLPreElement} */ (env.element);\n\t\tif (pre.matches(SELECTOR)) {\n\t\t\tenv.code = ''; // fast-path the whole thing and go to complete\n\n\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADING); // mark as loading\n\n\t\t\t// add code element with loading message\n\t\t\tvar code = pre.appendChild(document.createElement('CODE'));\n\t\t\tcode.textContent = LOADING_MESSAGE;\n\n\t\t\tvar src = pre.getAttribute('data-src');\n\n\t\t\tvar language = env.language;\n\t\t\tif (language === 'none') {\n\t\t\t\t// the language might be 'none' because there is no language set;\n\t\t\t\t// in this case, we want to use the extension as the language\n\t\t\t\tvar extension = (/\\.(\\w+)$/.exec(src) || [, 'none'])[1];\n\t\t\t\tlanguage = EXTENSIONS[extension] || extension;\n\t\t\t}\n\n\t\t\t// set language classes\n\t\t\tsetLanguageClass(code, language);\n\t\t\tsetLanguageClass(pre, language);\n\n\t\t\t// preload the language\n\t\t\tvar autoloader = Prism.plugins.autoloader;\n\t\t\tif (autoloader) {\n\t\t\t\tautoloader.loadLanguages(language);\n\t\t\t}\n\n\t\t\t// load file\n\t\t\tvar xhr = new XMLHttpRequest();\n\t\t\txhr.open('GET', src, true);\n\t\t\txhr.onreadystatechange = function () {\n\t\t\t\tif (xhr.readyState == 4) {\n\t\t\t\t\tif (xhr.status < 400 && xhr.responseText) {\n\t\t\t\t\t\t// mark as loaded\n\t\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADED);\n\n\t\t\t\t\t\t// highlight code\n\t\t\t\t\t\tcode.textContent = xhr.responseText;\n\t\t\t\t\t\tPrism.highlightElement(code);\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// mark as failed\n\t\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_FAILED);\n\n\t\t\t\t\t\tif (xhr.status >= 400) {\n\t\t\t\t\t\t\tcode.textContent = FAILURE_MESSAGE(xhr.status, xhr.statusText);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcode.textContent = FAILURE_EMPTY_MESSAGE;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\txhr.send(null);\n\t\t}\n\t});\n\n\tPrism.plugins.fileHighlight = {\n\t\t/**\n\t\t * Executes the File Highlight plugin for all matching `pre` elements under the given container.\n\t\t *\n\t\t * Note: Elements which are already loaded or currently loading will not be touched by this method.\n\t\t *\n\t\t * @param {ParentNode} [container=document]\n\t\t */\n\t\thighlight: function highlight(container) {\n\t\t\tvar elements = (container || document).querySelectorAll(SELECTOR);\n\n\t\t\tfor (var i = 0, element; (element = elements[i++]);) {\n\t\t\t\tPrism.highlightElement(element);\n\t\t\t}\n\t\t}\n\t};\n\n\tvar logged = false;\n\t/** @deprecated Use `Prism.plugins.fileHighlight.highlight` instead. */\n\tPrism.fileHighlight = function () {\n\t\tif (!logged) {\n\t\t\tconsole.warn('Prism.fileHighlight is deprecated. Use `Prism.plugins.fileHighlight.highlight` instead.');\n\t\t\tlogged = true;\n\t\t}\n\t\tPrism.plugins.fileHighlight.highlight.apply(this, arguments);\n\t};\n\n}());\n","const dom = {\n    select: function (selector) {\n          return document.querySelector(selector);\n    },\n\n    selectAll: function (selector) {\n          return document.querySelectorAll(selector);\n    },\n\n    create: function (name, props) {\n          const element = document.createElement(name),\n                propEntries = Object.entries(props),\n                propsLength = propEntries.length;\n\n          if (propsLength == 0) return element;\n\n          propEntries.forEach(([key, value]) => {\n                if (key == \"parent\") {\n                      return value.appendChild(element);\n                }\n\n                if (key == \"attr\") {\n                      return this.setAttr(element, value);\n                }\n\n                if (key == \"event\") {\n                      return this.addEvent(element, value);\n                }\n\n                if (key == \"style\") {\n                      return this.addStyle(element, value);\n                }\n\n                element[key] = value;\n          });\n\n          return element;\n    },\n\n    setAttr: function(target, attrMap) {\n          const attrEntries = Object.entries(attrMap);\n\n          attrEntries.forEach(([key, value]) => {\n                target.setAttribute(key, value);\n          });\n\n          return this;\n    },\n\n    addEvent: function (target, eventMap) {\n          const isArray = Array.isArray(eventMap);\n\n          // if not array wrap it into array\n          let eventArr = isArray ? eventMap : [eventMap];\n\n          eventArr.forEach(({ name, callback }) => {\n                target.addEventListener(name, callback, false);\n          });\n\n          return this;\n    },\n\n    addStyle: function(target, styleMap) {\n          const styleEntries = Object.entries(styleMap);\n\n          styleEntries.forEach(([key, value]) => {\n                target.style[key] = value;\n          });\n\n          return this;\n    }\n};\n\nexport default dom;\n","class History {\n    constructor(editor) {\n        this.editor = editor;\n        this.stack = [];\n        this.level = 0;\n\n        // fill the stack for the first time\n        this.record(0, \"\");\n    }\n\n    record(cursor, value) {\n        if (this.stack.length > 1000) {\n            // limit stack size\n            this.stack.shift();\n        }\n\n        const { stringify } = JSON;\n        const lastHistory = this.stack.slice(-1)[0];\n        const currHistory = { cursor, value };\n\n        if (stringify(lastHistory) != stringify(currHistory)) {\n            // avoid duplicated value\n            this.stack.push(currHistory);\n        }\n\n        this.level = this.stack.length - 1;\n    }\n\n    undo() {\n        if (this.level > 0) {\n            this.level -= 1;\n            this.restore();\n        }\n    }\n\n    redo() {\n        if (this.level < this.stack.length - 1) {\n            this.level += 1;\n            this.restore();\n        }\n    }\n\n    restore() {\n        const { cursor, value } = this.stack[this.level];\n        this.editor.setValue(value, false);\n        this.editor.setCursor(cursor);\n    }\n}\n\nexport default History;\n","const languages = {\n    require: {\n        javascript: \"clike\",\n        actionscript: \"javascript\",\n        apex: [\"clike\", \"sql\"],\n        arduino: \"cpp\",\n        aspnet: [\"markup\", \"csharp\"],\n        birb: \"clike\",\n        bison: \"c\",\n        c: \"clike\",\n        csharp: \"clike\",\n        cpp: \"c\",\n        cfscript: \"clike\",\n        chaiscript: [\"clike\", \"cpp\"],\n        coffeescript: \"javascript\",\n        crystal: \"ruby\",\n        \"css-extras\": \"css\",\n        d: \"clike\",\n        dart: \"clike\",\n        django: \"markup-templating\",\n        ejs: [\"javascript\", \"markup-templating\"],\n        etlua: [\"lua\", \"markup-templating\"],\n        erb: [\"ruby\", \"markup-templating\"],\n        fsharp: \"clike\",\n        \"firestore-security-rules\": \"clike\",\n        flow: \"javascript\",\n        ftl: \"markup-templating\",\n        gml: \"clike\",\n        glsl: \"c\",\n        go: \"clike\",\n        groovy: \"clike\",\n        haml: \"ruby\",\n        handlebars: \"markup-templating\",\n        haxe: \"clike\",\n        hlsl: \"c\",\n        idris: \"haskell\",\n        java: \"clike\",\n        javadoc: [\"markup\", \"java\", \"javadoclike\"],\n        jolie: \"clike\",\n        jsdoc: [\"javascript\", \"javadoclike\", \"typescript\"],\n        \"js-extras\": \"javascript\",\n        json5: \"json\",\n        jsonp: \"json\",\n        \"js-templates\": \"javascript\",\n        kotlin: \"clike\",\n        latte: [\"clike\", \"markup-templating\", \"php\"],\n        less: \"css\",\n        lilypond: \"scheme\",\n        liquid: \"markup-templating\",\n        markdown: \"markup\",\n        \"markup-templating\": \"markup\",\n        mongodb: \"javascript\",\n        n4js: \"javascript\",\n        objectivec: \"c\",\n        opencl: \"c\",\n        parser: \"markup\",\n        php: \"markup-templating\",\n        phpdoc: [\"php\", \"javadoclike\"],\n        \"php-extras\": \"php\",\n        plsql: \"sql\",\n        processing: \"clike\",\n        protobuf: \"clike\",\n        pug: [\"markup\", \"javascript\"],\n        purebasic: \"clike\",\n        purescript: \"haskell\",\n        qsharp: \"clike\",\n        qml: \"javascript\",\n        qore: \"clike\",\n        racket: \"scheme\",\n        jsx: [\"markup\", \"javascript\"],\n        tsx: [\"jsx\", \"typescript\"],\n        reason: \"clike\",\n        ruby: \"clike\",\n        sass: \"css\",\n        scss: \"css\",\n        scala: \"java\",\n        \"shell-session\": \"bash\",\n        smarty: \"markup-templating\",\n        solidity: \"clike\",\n        soy: \"markup-templating\",\n        sparql: \"turtle\",\n        sqf: \"clike\",\n        squirrel: \"clike\",\n        swift: \"clike\",\n        \"t4-cs\": [\"t4-templating\", \"csharp\"],\n        \"t4-vb\": [\"t4-templating\", \"vbnet\"],\n        tap: \"yaml\",\n        tt2: [\"clike\", \"markup-templating\"],\n        textile: \"markup\",\n        twig: \"markup\",\n        typescript: \"javascript\",\n        v: \"clike\",\n        vala: \"clike\",\n        vbnet: \"basic\",\n        velocity: \"markup\",\n        wiki: \"markup\",\n        xeora: \"markup\",\n        \"xml-doc\": \"markup\",\n        xquery: \"markup\"\n    },\n    aliases: {\n        html: \"markup\",\n        xml: \"markup\",\n        svg: \"markup\",\n        mathml: \"markup\",\n        ssml: \"markup\",\n        atom: \"markup\",\n        rss: \"markup\",\n        js: \"javascript\",\n        g4: \"antlr4\",\n        adoc: \"asciidoc\",\n        shell: \"bash\",\n        shortcode: \"bbcode\",\n        rbnf: \"bnf\",\n        oscript: \"bsl\",\n        cs: \"csharp\",\n        dotnet: \"csharp\",\n        cfc: \"cfscript\",\n        coffee: \"coffeescript\",\n        conc: \"concurnas\",\n        jinja2: \"django\",\n        \"dns-zone\": \"dns-zone-file\",\n        dockerfile: \"docker\",\n        gv: \"dot\",\n        eta: \"ejs\",\n        xlsx: \"excel-formula\",\n        xls: \"excel-formula\",\n        gamemakerlanguage: \"gml\",\n        hbs: \"handlebars\",\n        hs: \"haskell\",\n        idr: \"idris\",\n        gitignore: \"ignore\",\n        hgignore: \"ignore\",\n        npmignore: \"ignore\",\n        webmanifest: \"json\",\n        kt: \"kotlin\",\n        kts: \"kotlin\",\n        kum: \"kumir\",\n        tex: \"latex\",\n        context: \"latex\",\n        ly: \"lilypond\",\n        emacs: \"lisp\",\n        elisp: \"lisp\",\n        \"emacs-lisp\": \"lisp\",\n        md: \"markdown\",\n        moon: \"moonscript\",\n        n4jsd: \"n4js\",\n        nani: \"naniscript\",\n        objc: \"objectivec\",\n        qasm: \"openqasm\",\n        objectpascal: \"pascal\",\n        px: \"pcaxis\",\n        pcode: \"peoplecode\",\n        pq: \"powerquery\",\n        mscript: \"powerquery\",\n        pbfasm: \"purebasic\",\n        purs: \"purescript\",\n        py: \"python\",\n        qs: \"qsharp\",\n        rkt: \"racket\",\n        rpy: \"renpy\",\n        robot: \"robotframework\",\n        rb: \"ruby\",\n        \"sh-session\": \"shell-session\",\n        shellsession: \"shell-session\",\n        smlnj: \"sml\",\n        sol: \"solidity\",\n        sln: \"solution-file\",\n        rq: \"sparql\",\n        t4: \"t4-cs\",\n        trig: \"turtle\",\n        ts: \"typescript\",\n        tsconfig: \"typoscript\",\n        uscript: \"unrealscript\",\n        uc: \"unrealscript\",\n        url: \"uri\",\n        vb: \"visual-basic\",\n        vba: \"visual-basic\",\n        mathematica: \"wolfram\",\n        nb: \"wolfram\",\n        wl: \"wolfram\",\n        xeoracube: \"xeora\",\n        yml: \"yaml\"\n    }\n};\n\nexport default languages;\n","// inspired by prism autoloader plugin\n\nimport dom from \"./utils/dom\";\nimport languages from \"./utils/languages\";\n\nclass Loader {\n    constructor() {\n        this.baseURL = \"https://unpkg.com/iblize/dist/\";\n        this.themes = [];\n    }\n\n    loadLanguage(name, path, callback) {\n        const { require, aliases } = languages;\n\n        if (name in aliases) {\n            // if language name is alias \n            // change with real name\n            name = aliases[name];\n        }\n\n        if (name in Prism.languages) {\n            // if language is exist stop \n            // execution and run callback\n            return callback();\n        }\n\n        if (path == \"\") {\n            path = this.baseURL + \"languages/\";\n        }\n\n        if (name in require) {\n            // load language depedencies if required\n            if (!Array.isArray(require[name])) {\n                require[name] = [require[name]];\n            }\n\n            require[name].forEach(require => {\n                if (require in Prism.languages) return;\n                createScript(require);\n            });\n        }\n\n        // load language\n        createScript(name, callback);\n\n        function createScript(name, callback = () => {}) {\n            const script = dom.create(\"script\", {\n                parent: document.body,\n                src: path + name + \".js\",\n                onload: () => { script.remove(); callback() }\n            });\n        }\n    }\n\n    loadTheme(name, path) {\n        if (path == \"\") {\n            path = this.baseURL + \"themes/\";\n        }\n\n        if (this.themes.includes(name)) {\n            // if theme is exist, just update path/url.\n            const link = dom.select(`link[theme=\"${name}\"]`);\n            return link.href = path + name + \".css\";\n        }\n\n        const ref = document.head;\n\n        ref.insertAdjacentElement(\"afterbegin\", dom.create(\"link\", {\n            rel: \"stylesheet\",\n            href: path + name + \".css\",\n            attr: { theme: name }\n        }));\n\n        this.themes.push(name);\n    }\n}\n\nexport default Loader;","import Prism from \"prismjs\";\nimport dom from \"./utils/dom\";\nimport History from \"./history\";\nimport Loader from \"./loader\";\n\nclass Iblize {\n    constructor(container = \"\", options = {}) {\n        this.version = __VERSION__;\n        \n        this.history = new History(this);\n        this.loader = new Loader();\n\n        if (container instanceof HTMLElement) {\n            this.elementRoot = container;\n        } else {\n            this.elementRoot = dom.select(container);\n        }\n\n        if (!this.elementRoot) {\n            throw Error(\"Iblize can't find the editor containers\");\n        }\n\n        // default options\n        this.options = {\n            language: \"javascript\",\n            languagesPath: \"\",\n            lineNumber: true,\n            readOnly: false,\n            tabSize: 2,\n            theme: \"iblize-dark\",\n            themesPath: \"\"\n        };\n\n        // prepare the editor\n        this.setupEditor();\n        this.setValue(null);\n        this.loadTheme();\n        this.loadLanguage();\n        this.setOptions(options);\n    }\n\n    // Setup Editor\n\n    setupEditor() {\n        this.createEditorElement();\n        this.attachTextareaEvent();\n    }\n\n    createEditorElement() {\n        this.elementWrapper = dom.create(\"div\", {\n            parent: this.elementRoot,\n            className: `iblize ${this.options.theme}`\n        });\n\n        this.elementLinenumber = dom.create(\"div\", {\n            parent: this.elementWrapper,\n            className: \"iblize_linenumber\"\n        });\n\n        this.elementContent = dom.create(\"div\", {\n            parent: this.elementWrapper,\n            className: \"iblize_content\"\n        });\n\n        this.elementPre = dom.create(\"pre\", {\n            parent: this.elementContent,\n            className: \"iblize_pre\"\n        });\n\n        this.elementCode = dom.create(\"code\", {\n            parent: this.elementPre,\n            className: \"iblize_code\"\n        });\n\n        this.elementTextarea = dom.create(\"textarea\", {\n            parent: this.elementContent,\n            className: \"iblize_textarea\",\n            attr: {\n                spellcheck: \"false\",\n                autocorrect: \"off\",\n                autocomplete: \"off\",\n                autocapitalize: \"off\"\n            }\n        });\n    }\n\n    attachTextareaEvent() {\n        dom.addEvent(this.elementTextarea, [\n            {\n                name: \"input\",\n                callback: this.handleInput.bind(this)\n            },\n            {\n                name: \"keydown\",\n                callback: this.handleKeydown.bind(this)\n            },\n            {\n                name: \"scroll\",\n                callback: this.handleScroll.bind(this)\n            }\n        ]);\n    }\n\n    // Textarea Event Handler\n\n    handleScroll() {\n        const {\n            scrollWidth: width,\n            scrollHeight: height,\n            scrollTop: top,\n            scrollLeft: left\n        } = this.elementTextarea;\n\n        dom.addStyle(this.elementLinenumber, {\n            height: height + \"px\",\n            transform: `translateY(${top * -1}px)`\n        });\n\n        dom.addStyle(this.elementPre, {\n            width: width + \"px\",\n            height: height + \"px\",\n            transform: `translate(${left * -1}px, ${top * -1}px)`\n        });\n    }\n\n    handleInput() {\n        if (this.typingTimeout != undefined) {\n            clearTimeout(this.typingTimeout);\n        }\n      \n        this.typingTimeout = setTimeout(() => {\n            this.recordHistory();\n        }, 150);\n\n        if (this.onUpdateCallback != undefined) {\n            // run on update callback if exist\n            this.onUpdateCallback(this.getValue());\n        }\n\n        this.closeCharacter();\n        this.updateEditor();\n    }\n\n    handleKeydown(event) {\n        if (event.key == \"Tab\") {\n            event.preventDefault();\n            this.insertTab();\n        }\n\n        if (event.keyCode == 13 || event.key == \"Enter\") {\n            event.preventDefault();\n            this.addLineIndent();\n        }\n\n        if (event.ctrlKey && event.key == \"z\") {\n            event.preventDefault();\n            this.undo();\n        }\n\n        if (event.ctrlKey && event.shiftKey && event.key == \"Z\") {\n            event.preventDefault();\n            this.redo();\n        }\n    }\n\n    // Editor Internal Method\n\n    updateEditor() {\n        this.countLinenumber();\n        this.highlightSyntax();\n    }\n\n    countLinenumber() {\n        const totalLines = this.getTotalLine();\n        const childLength = this.elementLinenumber.childElementCount;\n\n        if (totalLines != childLength && this.options.lineNumber) {\n            let child = \"\";\n\n            for (let i = 0; i < totalLines; i++) {\n                child += `<span class=\"iblize_linenumber_child\">${i + 1}</span>`;\n            }\n\n            this.elementLinenumber.innerHTML = child;\n        }\n    }\n\n    highlightSyntax() { \n        const input = this.getValue();\n\n        let language = this.options.language;\n        let grammar = Prism.languages[language];\n\n        if (grammar == undefined) {\n            grammar = Prism.languages[\"plaintext\"];\n        }\n\n        const output = Prism.highlight(input, grammar, language);\n        this.elementCode.innerHTML = output;\n    }\n\n    // Editor Internal Method\n\n    addLineIndent() {\n        const cursor = this.getCursor();\n        const value = this.getValue();\n\n        // get indent length from current active line\n        const activeLine = this.getActiveLine();\n        const lineValue = this.getLineValue(activeLine);\n        const lineIndent = lineValue.match(/^\\s{1,}/);\n\n        // get the characters from before and after cursor\n        const charBefore = value.charAt(cursor - 1);\n        const charAfter = value.charAt(cursor);\n\n        let indent = lineIndent == null ? 0 : lineIndent[0].length;\n\n        if (\n            (charBefore == \"(\" && charAfter == \")\") ||\n            (charBefore == \"{\" && charAfter == \"}\") ||\n            (charBefore == \"[\" && charAfter == \"]\") ||\n            (charBefore == \">\" && charAfter == \"<\")\n        ) {\n            \n            const tabSize = this.options.tabSize;\n            const string = \"\\n\" + \" \".repeat(indent + tabSize) + \n                           \"\\n\" + \" \".repeat(indent);\n\n            this.insertText(cursor, string, { \n                moveCursor: cursor + indent + tabSize + 1,\n                recordHistory: \"both\"\n             });\n\n        } else {\n\n            this.insertText(cursor, \"\\n\" + \" \".repeat(indent), { \n                moveCursor: cursor + indent + 1,\n                recordHistory: \"both\"\n             });\n\n        }\n    }\n\n    closeCharacter() {\n        const cursor = this.getCursor();\n        const value = this.getValue();\n\n        // get the characters from before and after cursor\n        const charBefore = value.charAt(cursor - 1);\n        const charAfter = value.charAt(cursor);\n\n        const charList = [\n            { open: \"(\", close: \")\" },\n            { open: \"{\", close: \"}\" },\n            { open: \"[\", close: \"]\" },\n            { open: \"<\", close: \">\" },\n            { open: \"'\", close: \"'\" },\n            { open: '\"', close: '\"' },\n            { open: \"`\", close: \"`\" }\n        ];\n\n        if (!this.valueLengthReminder) {\n            // make reminder for value length\n            // to compare with current value.\n            // to detect backspace on mobile browser.\n            this.valueLengthReminder = 0;\n        }\n\n        if (value.length > this.valueLengthReminder) {\n\n            charList.forEach((char) => {\n                // skip char\n                if (charBefore == char.close && charAfter == char.close) {\n                    this.removeText(cursor, cursor + 1);\n                    return;\n                }\n\n                // closing char\n                if (charBefore == char.open) {\n                    this.insertText(cursor, char.close, {\n                        moveCursor: cursor\n                    });\n                }\n            });\n\n        } else {\n\n            // previous history before deleted\n            const lastHistory = this.history.stack.slice(-1)[0].value;\n            const previousChar = lastHistory.charAt(cursor);\n\n            charList.forEach((char) => {\n                // delete char\n                if (previousChar == char.open && charAfter == char.close) {\n                    this.removeText(cursor, cursor + 1);\n                }\n            });\n\n        }\n\n        this.valueLengthReminder = value.length;\n    }\n\n    valueFromComment() {\n        const root = this.elementRoot;\n        const what = NodeFilter.SHOW_COMMENT;\n        const iterator = document.createNodeIterator(root, what);\n        const comment = iterator.nextNode();\n\n        if (comment != null) {\n            return comment.nodeValue.replace(/\\r?\\n/, \"\");\n        }\n\n        return \"\";\n    }\n\n    recordHistory(meta = {}) {\n        if (meta.cursor == undefined) {\n            meta.cursor = this.getCursor();\n        }\n\n        if (meta.value == undefined) {\n            meta.value = this.getValue();\n        }\n\n        this.history.record(meta.cursor, meta.value);\n    }\n\n    optionsValidator(options) {\n        Object.entries(options).forEach((option) => {\n            const [key, value] = option;\n\n            if (!this.options.hasOwnProperty(key)) {\n                throw Error(`Invalid Iblize option! unknown option {${key}}`);\n            }\n\n            const valueType = typeof this.options[key];\n\n            if (typeof value != valueType) {\n                throw Error(`Invalid Iblize option! {${key}} value must be a ${valueType}`);\n            }\n        });\n    }\n\n    loadLanguage() {\n        const name = this.options.language;\n        const path = this.options.languagesPath;\n        const callback = this.highlightSyntax;\n        this.loader.loadLanguage(name, path, callback.bind(this));\n    }\n\n    loadTheme() {\n        const name = this.options.theme;\n        const path = this.options.themesPath;\n        this.loader.loadTheme(name, path);\n    }\n\n    // Editor Event\n\n    onUpdate(callback) {\n        if (typeof callback != \"function\") {\n            throw Error(\"Invalid `onUpdate()` callback parameter! callback must be a function.\");\n        }\n\n        this.onUpdateCallback = callback;\n    }\n\n    // Editor Public API\n\n    getValue(from = null, to = null) {\n        const value = this.elementTextarea.value;\n\n        if (from != null && to != null) {\n            return value.substring(from, to);\n        }\n\n        if (from != null && to == null) {\n            return value.substring(from);\n        }\n        \n        return value;\n    }\n\n    setValue(value, recordHistory = true) {\n        if (value != null) {\n            this.elementTextarea.value = value;\n        } else {\n            this.elementTextarea.value = this.valueFromComment();\n        }\n\n        this.updateEditor();\n        if (recordHistory) this.recordHistory();\n    }\n\n    getOptions() {\n        return this.options;\n    }\n\n    setOptions(options) {\n        // run options validator\n        this.optionsValidator(options);\n\n        // assign new options\n        Object.assign(this.options, options);\n\n        // update element\n        if (options.theme != undefined || options.themesPath != undefined) {\n            this.elementWrapper.className = `iblize ${this.options.theme}`;\n            this.loadTheme();\n        }\n\n        if (options.language != undefined || options.languagesPath != undefined) {\n            this.loadLanguage();\n        }\n\n        if (options.readOnly != undefined) {\n            this.elementTextarea.readOnly = this.options.readOnly;\n        }\n\n        if (options.lineNumber != undefined) {\n            this.elementLinenumber.style.display = this.options.lineNumber ? \"\" : \"none\";\n            this.countLinenumber();\n        }\n    }\n\n    getSelection() {\n        const {\n            selectionStart: start,\n            selectionEnd: end,\n            selectionDirection: dir\n        } = this.elementTextarea;\n\n        return { start, end, dir };\n    }\n\n    setSelection(start, end, dir = \"none\") {\n        this.elementTextarea.setSelectionRange(start, end, dir);\n    }\n\n    getCursor() {\n        return this.getSelection().start;\n    }\n\n    setCursor(pos) {\n        this.setSelection(pos, pos);\n    }\n\n    getActiveLine() {\n        const cursor = this.getCursor();\n        const value = this.getValue(0, cursor);\n        return value.split(\"\\n\").length;\n    }\n\n    getTotalLine() {\n        const value = this.getValue();\n        return value.split(\"\\n\").length;\n    }\n\n    getLineValue(line) {\n        const value = this.getValue();\n        return value.split(\"\\n\")[line - 1];\n    }\n\n    insertTab() {\n        const cursor = this.getCursor();\n        const tabSize = this.options.tabSize;\n\n        this.insertText(cursor, \" \".repeat(tabSize), {\n            recordHistory: \"both\"\n        });\n    }\n\n    insertText(from, text, options = {}) {\n        const valueBefore =  this.getValue(0, from);\n        const valueAfter =  this.getValue(from);\n\n        let record = options.recordHistory || \"after\";\n        let cursor = options.moveCursor || from + text.length;\n\n        if (record == \"before\" || record == \"both\") {\n            this.recordHistory();\n        }\n\n        this.setValue(valueBefore + text + valueAfter, false);\n        this.setCursor(cursor); \n\n        if (record == \"after\" || record == \"both\") {\n            this.recordHistory();\n        }\n    }\n\n    removeText(from, to, options = {}) {\n        const valueBefore = this.getValue(0, from);\n        const valueAfter = this.getValue(to);\n\n        let record = options.recordHistory || \"after\";\n        let cursor = options.moveCursor || from;\n\n        if (record == \"before\" || record == \"both\") {\n            this.recordHistory();\n        }\n\n        this.setValue(valueBefore + valueAfter, false);\n        this.setCursor(cursor)\n\n        if (record == \"after\" || record == \"both\") {\n            this.recordHistory();\n        }\n    }\n\n    undo() {\n        this.history.undo();\n    }\n\n    redo() {\n        this.history.redo();\n    }\n}\n\nexport default Iblize;"],"names":["Prism","_self","lang","uniqueId","plainTextGrammar","_","manual","disableWorkerMessageHandler","util","encode","tokens","Token","type","content","alias","Array","isArray","map","replace","o","Object","prototype","toString","call","slice","objId","obj","defineProperty","value","clone","deepClone","visited","id","key","hasOwnProperty","forEach","v","i","getLanguage","element","test","className","parentElement","match","toLowerCase","currentScript","document","Error","err","src","exec","stack","scripts","getElementsByTagName","isActive","defaultActivation","no","classList","contains","languages","plain","plaintext","text","txt","extend","redef","insertBefore","inside","before","insert","root","grammar","ret","token","newToken","old","DFS","this","callback","property","propertyType","plugins","highlightAll","async","highlightAllUnder","container","env","selector","hooks","run","elements","apply","querySelectorAll","highlightElement","language","parent","nodeName","code","textContent","insertHighlightedCode","highlightedCode","innerHTML","hasAttribute","setAttribute","Worker","worker","filename","onmessage","evt","data","postMessage","JSON","stringify","immediateClose","highlight","tokenize","rest","tokenList","LinkedList","addAfter","head","matchGrammar","list","array","node","next","tail","push","toArray","all","add","name","callbacks","length","matchedStr","matchPattern","pattern","pos","lookbehind","lastIndex","lookbehindLength","index","startNode","startPos","rematch","patterns","j","cause","patternObj","greedy","global","flags","RegExp","source","currentNode","reach","str","removeCount","from","to","p","k","matchStr","after","removeFrom","prev","removeRange","nestedRematch","newNode","count","s","e","tag","classes","attributes","aliases","join","addEventListener","message","parse","close","script","highlightAutomaticallyCallback","readyState","defer","window","requestAnimationFrame","setTimeout","WorkerGlobalScope","self","module","exports","markup","comment","prolog","doctype","string","punctuation","cdata","namespace","entity","tagName","includedCdataInside","def","attrName","html","mathml","svg","xml","ssml","atom","rss","css","atrule","rule","keyword","url","function","important","addInlined","addAttribute","clike","boolean","number","operator","javascript","regex","parameter","constant","hashbang","interpolation","js","Element","matches","msMatchesSelector","webkitMatchesSelector","EXTENSIONS","py","rb","ps1","psm1","sh","bat","h","tex","STATUS_ATTR","STATUS_LOADING","STATUS_LOADED","SELECTOR","pre","appendChild","createElement","getAttribute","extension","setLanguageClass","autoloader","loadLanguages","xhr","XMLHttpRequest","open","onreadystatechange","status","responseText","statusText","send","fileHighlight","logged","console","warn","arguments","trim","dom","select","querySelector","selectAll","create","props","propEntries","entries","_this","setAttr","addEvent","addStyle","target","attrMap","eventMap","styleMap","style","History","editor","level","record","cursor","shift","currHistory","restore","setValue","setCursor","actionscript","apex","arduino","aspnet","birb","bison","c","csharp","cpp","cfscript","chaiscript","coffeescript","crystal","d","dart","django","ejs","etlua","erb","fsharp","flow","ftl","gml","glsl","go","groovy","haml","handlebars","haxe","hlsl","idris","java","javadoc","jolie","jsdoc","json5","jsonp","kotlin","latte","less","lilypond","liquid","markdown","mongodb","n4js","objectivec","opencl","parser","php","phpdoc","plsql","processing","protobuf","pug","purebasic","purescript","qsharp","qml","qore","racket","jsx","tsx","reason","ruby","sass","scss","scala","smarty","solidity","soy","sparql","sqf","squirrel","swift","tap","tt2","textile","twig","typescript","vala","vbnet","velocity","wiki","xeora","xquery","g4","adoc","shell","shortcode","rbnf","oscript","cs","dotnet","cfc","coffee","conc","jinja2","dockerfile","gv","eta","xlsx","xls","gamemakerlanguage","hbs","hs","idr","gitignore","hgignore","npmignore","webmanifest","kt","kts","kum","context","ly","emacs","elisp","md","moon","n4jsd","nani","objc","qasm","objectpascal","px","pcode","pq","mscript","pbfasm","purs","qs","rkt","rpy","robot","shellsession","smlnj","sol","sln","rq","t4","trig","ts","tsconfig","uscript","uc","vb","vba","mathematica","nb","wl","xeoracube","yml","Loader","baseURL","themes","path","require","createScript","body","onload","remove","includes","href","insertAdjacentElement","rel","attr","theme","Iblize","options","version","history","loader","HTMLElement","elementRoot","languagesPath","lineNumber","readOnly","tabSize","themesPath","setupEditor","loadTheme","loadLanguage","setOptions","createEditorElement","attachTextareaEvent","elementWrapper","elementLinenumber","elementContent","elementPre","elementCode","elementTextarea","spellcheck","autocorrect","autocomplete","autocapitalize","handleInput","bind","handleKeydown","handleScroll","width","scrollWidth","height","scrollHeight","top","scrollTop","left","scrollLeft","transform","undefined","typingTimeout","clearTimeout","recordHistory","onUpdateCallback","getValue","closeCharacter","updateEditor","event","preventDefault","insertTab","keyCode","addLineIndent","ctrlKey","undo","shiftKey","redo","countLinenumber","highlightSyntax","totalLines","getTotalLine","childElementCount","child","input","output","getCursor","activeLine","getActiveLine","lineIndent","getLineValue","charBefore","charAt","charAfter","indent","repeat","insertText","moveCursor","charList","valueLengthReminder","char","_this2","removeText","previousChar","what","NodeFilter","SHOW_COMMENT","createNodeIterator","nextNode","nodeValue","meta","option","_this3","valueType","_typeof","substring","valueFromComment","optionsValidator","assign","display","start","selectionStart","end","selectionEnd","dir","selectionDirection","setSelectionRange","getSelection","setSelection","split","line","valueBefore","valueAfter"],"mappings":"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"}